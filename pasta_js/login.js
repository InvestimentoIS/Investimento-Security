// URL do backend hospedado no Render
const backendURL = 'https://investimento-security.onrender.com'; // Verifique se esta URL est치 correta

// Fun칞칚o para alternar a visibilidade da senha
function togglePasswordVisibility() {
    const passwordField = document.getElementById('password');
    const toggleIcon = document.getElementById('togglePassword');

    // Alterna entre os tipos de input (password e text)
    if (passwordField.type === 'password') {
        passwordField.type = 'text'; // Exibe a senha
        toggleIcon.textContent = '游댑'; // Atualiza o 칤cone para "senha vis칤vel"
    } else {
        passwordField.type = 'password'; // Oculta a senha
        toggleIcon.textContent = '游댏'; // Atualiza o 칤cone para "senha oculta"
    }
}

// Verifica se o usu치rio est치 logado
const token = sessionStorage.getItem('authToken'); // Usando sessionStorage para maior seguran칞a

if (token) {
    // O usu치rio est치 logado, faz uma requisi칞칚o para obter informa칞칫es do usu치rio
    fetch(`${backendURL}/meu-perfil`, {
        headers: {
            "Authorization": `Bearer ${token}`
        }
    })
    .then(response => response.json())
    .then(data => {
        console.log("Usu치rio logado:", data.username);
        // Aqui voc칡 pode atualizar a UI com as informa칞칫es do usu치rio, se necess치rio
        window.location.href = "https://investimentois.github.io/Investimento-Security/index.html"; // Redireciona para a p치gina principal
    })
    .catch(err => console.error("Erro ao buscar dados do usu치rio:", err));
} else {
    console.log("Usu치rio n칚o logado");
}

// Aplica o evento ao 칤cone de exibir/ocultar senha
document.getElementById('togglePassword').addEventListener('click', togglePasswordVisibility);

// Lida com o envio do formul치rio de login
document.getElementById('loginForm').addEventListener('submit', async function(event) {
    event.preventDefault(); // Impede o envio padr칚o do formul치rio

    const form = event.target;
    const formData = new FormData(form); // Captura os dados do formul치rio
    const data = Object.fromEntries(formData.entries()); // Converte para um objeto

    const messageDiv = document.getElementById('message');
    messageDiv.classList.remove('error', 'success', 'loading'); // Remove classes anteriores
    messageDiv.style.display = 'none'; // Esconde a mensagem no in칤cio

    try {
        // Exibe um loader enquanto a requisi칞칚o de login est치 sendo processada
        messageDiv.classList.add('loading');
        messageDiv.textContent = "Fazendo login...";
        messageDiv.style.display = 'block';

        // Faz a requisi칞칚o de login para o backend
        const response = await fetch(`${backendURL}/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data) // Envia os dados do formul치rio
        });

        const result = await response.json();

        if (response.ok) {
            // Login bem-sucedido
            messageDiv.classList.remove('loading');
            messageDiv.classList.add('success');
            messageDiv.textContent = "Login bem-sucedido! Redirecionando...";
            messageDiv.style.display = 'block'; // Exibe a mensagem de sucesso

            // Armazena o token de autentica칞칚o no sessionStorage para mais seguran칞a
            sessionStorage.setItem('authToken', result.token);

            // Redireciona para a p치gina principal de forma imediata e otimizada
            window.location.href = "https://investimentois.github.io/Investimento-Security/index.html";
        } else {
            throw new Error(result.error || "Credenciais inv치lidas.");
        }
    } catch (error) {
        // Exibe mensagem de erro
        messageDiv.classList.remove('loading');
        messageDiv.classList.add('error');
        messageDiv.textContent = error.message || 'Erro no servidor. Por favor, tente novamente.';
        messageDiv.style.display = 'block'; // Exibe a mensagem de erro

        // Limpa a mensagem ap칩s 3 segundos
        setTimeout(() => {
            messageDiv.style.display = 'none'; 
            messageDiv.textContent = ''; 
            messageDiv.classList.remove('error', 'success', 'loading'); // Remove as classes de mensagem
        }, 3000);
    }
});

// Fun칞칚o para buscar e exibir os dados do usu치rio logado
async function fetchUserProfile() {
    const token = sessionStorage.getItem('authToken'); // Usando sessionStorage para maior seguran칞a

    if (!token) {
        // Se n칚o tiver token, redireciona para a p치gina de login
        window.location.href = "https://investimentois.github.io/Investimento-Security/login.html";
        return;
    }

    try {
        const response = await fetch(`${backendURL}/meu-perfil`, { // Usa a rota /meu-perfil do backend
            method: 'GET',
            headers: {
                "Authorization": `Bearer ${token}`
            }
        });

        if (!response.ok) {
            throw new Error("N칚o foi poss칤vel carregar os dados do perfil.");
        }

        const userData = await response.json();

        // Exibe as informa칞칫es do usu치rio logado na p치gina
        document.getElementById('username').textContent = userData.username;
        document.getElementById('email').textContent = userData.email;
        document.getElementById('country').textContent = userData.country;
        document.getElementById('birthdate').textContent = userData.birthdate;
        document.getElementById('phone').textContent = userData.phone;
        document.getElementById('profilePhoto').src = userData.profilePhoto;
    } catch (error) {
        console.error(error);
        // Redireciona para a p치gina de login se o usu치rio n칚o estiver autenticado
        window.location.href = "https://investimentois.github.io/Investimento-Security/login.html";
    }
}
